// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: appearance/color/spot_color.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Aurigma.Design.Appearance.Color {

  /// <summary>Holder for reflection information generated from appearance/color/spot_color.proto</summary>
  public static partial class SpotColorReflection {

    #region Descriptor
    /// <summary>File descriptor for appearance/color/spot_color.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpotColorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFhcHBlYXJhbmNlL2NvbG9yL3Nwb3RfY29sb3IucHJvdG8SF2Rlc2lnbi5h",
            "cHBlYXJhbmNlLmNvbG9yGiRhcHBlYXJhbmNlL2NvbG9yL3Byb2Nlc3NfY29s",
            "b3IucHJvdG8iewoJU3BvdENvbG9yEhAKCGlua19uYW1lGAEgASgJEjgKCWlu",
            "a19jb2xvchgCIAEoCzIlLmRlc2lnbi5hcHBlYXJhbmNlLmNvbG9yLlByb2Nl",
            "c3NDb2xvchIUCgxpbmtfc29saWRpdHkYAyABKA0SDAoEdGludBgEIAEoDUIi",
            "qgIfQXVyaWdtYS5EZXNpZ24uQXBwZWFyYW5jZS5Db2xvcmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Aurigma.Design.Appearance.Color.ProcessColorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Aurigma.Design.Appearance.Color.SpotColor), global::Aurigma.Design.Appearance.Color.SpotColor.Parser, new[]{ "InkName", "InkColor", "InkSolidity", "Tint" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SpotColor : pb::IMessage<SpotColor>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpotColor> _parser = new pb::MessageParser<SpotColor>(() => new SpotColor());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpotColor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Aurigma.Design.Appearance.Color.SpotColorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpotColor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpotColor(SpotColor other) : this() {
      inkName_ = other.inkName_;
      inkColor_ = other.inkColor_ != null ? other.inkColor_.Clone() : null;
      inkSolidity_ = other.inkSolidity_;
      tint_ = other.tint_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpotColor Clone() {
      return new SpotColor(this);
    }

    /// <summary>Field number for the "ink_name" field.</summary>
    public const int InkNameFieldNumber = 1;
    private string inkName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InkName {
      get { return inkName_; }
      set {
        inkName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ink_color" field.</summary>
    public const int InkColorFieldNumber = 2;
    private global::Aurigma.Design.Appearance.Color.ProcessColor inkColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Aurigma.Design.Appearance.Color.ProcessColor InkColor {
      get { return inkColor_; }
      set {
        inkColor_ = value;
      }
    }

    /// <summary>Field number for the "ink_solidity" field.</summary>
    public const int InkSolidityFieldNumber = 3;
    private uint inkSolidity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint InkSolidity {
      get { return inkSolidity_; }
      set {
        inkSolidity_ = value;
      }
    }

    /// <summary>Field number for the "tint" field.</summary>
    public const int TintFieldNumber = 4;
    private uint tint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Tint {
      get { return tint_; }
      set {
        tint_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpotColor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpotColor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InkName != other.InkName) return false;
      if (!object.Equals(InkColor, other.InkColor)) return false;
      if (InkSolidity != other.InkSolidity) return false;
      if (Tint != other.Tint) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (InkName.Length != 0) hash ^= InkName.GetHashCode();
      if (inkColor_ != null) hash ^= InkColor.GetHashCode();
      if (InkSolidity != 0) hash ^= InkSolidity.GetHashCode();
      if (Tint != 0) hash ^= Tint.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (InkName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InkName);
      }
      if (inkColor_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InkColor);
      }
      if (InkSolidity != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(InkSolidity);
      }
      if (Tint != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Tint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (InkName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InkName);
      }
      if (inkColor_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InkColor);
      }
      if (InkSolidity != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(InkSolidity);
      }
      if (Tint != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Tint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (InkName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InkName);
      }
      if (inkColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InkColor);
      }
      if (InkSolidity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InkSolidity);
      }
      if (Tint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Tint);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpotColor other) {
      if (other == null) {
        return;
      }
      if (other.InkName.Length != 0) {
        InkName = other.InkName;
      }
      if (other.inkColor_ != null) {
        if (inkColor_ == null) {
          InkColor = new global::Aurigma.Design.Appearance.Color.ProcessColor();
        }
        InkColor.MergeFrom(other.InkColor);
      }
      if (other.InkSolidity != 0) {
        InkSolidity = other.InkSolidity;
      }
      if (other.Tint != 0) {
        Tint = other.Tint;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            InkName = input.ReadString();
            break;
          }
          case 18: {
            if (inkColor_ == null) {
              InkColor = new global::Aurigma.Design.Appearance.Color.ProcessColor();
            }
            input.ReadMessage(InkColor);
            break;
          }
          case 24: {
            InkSolidity = input.ReadUInt32();
            break;
          }
          case 32: {
            Tint = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            InkName = input.ReadString();
            break;
          }
          case 18: {
            if (inkColor_ == null) {
              InkColor = new global::Aurigma.Design.Appearance.Color.ProcessColor();
            }
            input.ReadMessage(InkColor);
            break;
          }
          case 24: {
            InkSolidity = input.ReadUInt32();
            break;
          }
          case 32: {
            Tint = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
