// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: trim_settings.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Aurigma.Design {

  /// <summary>Holder for reflection information generated from trim_settings.proto</summary>
  public static partial class TrimSettingsReflection {

    #region Descriptor
    /// <summary>File descriptor for trim_settings.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TrimSettingsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChN0cmltX3NldHRpbmdzLnByb3RvEgZkZXNpZ24aEG1hdGgvc2lkZXMucHJv",
            "dG8iUwoMVHJpbVNldHRpbmdzEiEKBWJsZWVkGAEgASgLMhIuZGVzaWduLm1h",
            "dGguU2lkZXMSIAoEc2x1ZxgCIAEoCzISLmRlc2lnbi5tYXRoLlNpZGVzQhGq",
            "Ag5BdXJpZ21hLkRlc2lnbmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Aurigma.Design.Math.SidesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Aurigma.Design.TrimSettings), global::Aurigma.Design.TrimSettings.Parser, new[]{ "Bleed", "Slug" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TrimSettings : pb::IMessage<TrimSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TrimSettings> _parser = new pb::MessageParser<TrimSettings>(() => new TrimSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TrimSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Aurigma.Design.TrimSettingsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrimSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrimSettings(TrimSettings other) : this() {
      bleed_ = other.bleed_ != null ? other.bleed_.Clone() : null;
      slug_ = other.slug_ != null ? other.slug_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrimSettings Clone() {
      return new TrimSettings(this);
    }

    /// <summary>Field number for the "bleed" field.</summary>
    public const int BleedFieldNumber = 1;
    private global::Aurigma.Design.Math.Sides bleed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Aurigma.Design.Math.Sides Bleed {
      get { return bleed_; }
      set {
        bleed_ = value;
      }
    }

    /// <summary>Field number for the "slug" field.</summary>
    public const int SlugFieldNumber = 2;
    private global::Aurigma.Design.Math.Sides slug_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Aurigma.Design.Math.Sides Slug {
      get { return slug_; }
      set {
        slug_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TrimSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TrimSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Bleed, other.Bleed)) return false;
      if (!object.Equals(Slug, other.Slug)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (bleed_ != null) hash ^= Bleed.GetHashCode();
      if (slug_ != null) hash ^= Slug.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (bleed_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Bleed);
      }
      if (slug_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Slug);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (bleed_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Bleed);
      }
      if (slug_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Slug);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (bleed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bleed);
      }
      if (slug_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Slug);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TrimSettings other) {
      if (other == null) {
        return;
      }
      if (other.bleed_ != null) {
        if (bleed_ == null) {
          Bleed = new global::Aurigma.Design.Math.Sides();
        }
        Bleed.MergeFrom(other.Bleed);
      }
      if (other.slug_ != null) {
        if (slug_ == null) {
          Slug = new global::Aurigma.Design.Math.Sides();
        }
        Slug.MergeFrom(other.Slug);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (bleed_ == null) {
              Bleed = new global::Aurigma.Design.Math.Sides();
            }
            input.ReadMessage(Bleed);
            break;
          }
          case 18: {
            if (slug_ == null) {
              Slug = new global::Aurigma.Design.Math.Sides();
            }
            input.ReadMessage(Slug);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (bleed_ == null) {
              Bleed = new global::Aurigma.Design.Math.Sides();
            }
            input.ReadMessage(Bleed);
            break;
          }
          case 18: {
            if (slug_ == null) {
              Slug = new global::Aurigma.Design.Math.Sides();
            }
            input.ReadMessage(Slug);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
